/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.LogisticsWorkArea;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.LogisticsEnterprise;
import Business.Network.Network;
import Business.Organizations.Organization;
import Business.WorkQueue.MedicineWorkRequest;
import Business.WorkQueue.PatientRegistrationRequest;
import Business.WorkQueue.WorkRequest;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ajayp
 */
public class ManagePharmacyMedicinesJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManagePharmacyMedicinesJPanel
     */
    private JPanel userProcessContainer;
    private EcoSystem ecosystem;
    Enterprise enterprise;
    Organization organization;

    public ManagePharmacyMedicinesJPanel(JPanel userProcessContainer, EcoSystem ecosystem, Enterprise enterprise, Organization organization) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ecosystem = ecosystem;
        this.enterprise = enterprise;
        populateLogisticsTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void populateLogisticsTable() {
        DefaultTableModel logisticsModel = (DefaultTableModel) tblPharmacyMedicines.getModel();
        logisticsModel.setRowCount(0);
        for (Network network : ecosystem.getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                if (enterprise instanceof LogisticsEnterprise) {
                    for (WorkRequest wr : enterprise.getWorkQueue().getWorkRequestList()) {
                        if (wr instanceof PatientRegistrationRequest) {
                            Object[] row = new Object[logisticsModel.getColumnCount()];
                            row[0] = ((PatientRegistrationRequest) wr);
                            row[1] = ((PatientRegistrationRequest) wr).getPharmacy();
                            row[2] = ((PatientRegistrationRequest) wr).getQuantity();
                            row[3] = ((MedicineWorkRequest) wr).getStatus();
                            row[4] = ((MedicineWorkRequest) wr).getMessage();
                            logisticsModel.addRow(row);
                        }
                    }
                }
            }
        }
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblDeliverMedicines = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPharmacyMedicines = new javax.swing.JTable();
        btnProcess = new javax.swing.JButton();

        lblDeliverMedicines.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblDeliverMedicines.setText("Manage Pharmacy Medicines");

        tblPharmacyMedicines.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Logistics ID", "Pharmacy Name", "Quantity", "Status", "Message"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblPharmacyMedicines);

        btnProcess.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnProcess.setText("Process");
        btnProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcessActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(317, 317, 317)
                        .addComponent(lblDeliverMedicines))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(183, 183, 183)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(187, 187, 187)
                                .addComponent(btnProcess)))))
                .addContainerGap(207, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(lblDeliverMedicines)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnProcess)
                .addContainerGap(271, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcessActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblPharmacyMedicines.getSelectedRow();
        PatientRegistrationRequest patientRegistrationRequest = (PatientRegistrationRequest) tblPharmacyMedicines.getValueAt(selectedRow, 0);
        if (selectedRow >= 0) {
            String msg = JOptionPane.showInputDialog("Additional Information");
            patientRegistrationRequest.setStatus("Medicines Processed");
            patientRegistrationRequest.setMessage(msg);
            JOptionPane.showMessageDialog(null, "Medicines Delivered");
            populateLogisticsTable();
        } else {
            JOptionPane.showMessageDialog(null, "Please select a Pharmacy to send the medicines!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
    }//GEN-LAST:event_btnProcessActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnProcess;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDeliverMedicines;
    private javax.swing.JTable tblPharmacyMedicines;
    // End of variables declaration//GEN-END:variables
}
