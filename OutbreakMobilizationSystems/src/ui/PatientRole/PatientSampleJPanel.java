/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.PatientRole;

import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.DiagnosticCenterEnterprise;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organizations.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.PatientRegistrationRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 * @author ajayp
 * @author nakul
 * @author palak
 * 
 * Revision History:
 * 
 * Date(MM/DD/YYYY)      Author              Comment
 * 04/21/2021            @author palak       Added PatientSampleJPanel
 */

public class PatientSampleJPanel extends javax.swing.JPanel {

    /**
     * Creates new form PatientSampleJPanel
     */
    
    private JPanel userProcessContainer;
    private EcoSystem ecosystem;
    Enterprise enterprise;
    Organization organization;
    
    public PatientSampleJPanel(JPanel userProcessContainer, EcoSystem ecosystem, Enterprise enterprise, Organization organization) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ecosystem = ecosystem;
        this.enterprise = enterprise;
        this.organization = organization;
        populateEnterpriseTable();
        populatePatientStatusTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
        private void populateEnterpriseTable() {
        DefaultTableModel enterpriseModel = (DefaultTableModel) tblDiagnosticCenter.getModel();
        enterpriseModel.setRowCount(0);
        for (Network network : ecosystem.getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                if(enterprise instanceof DiagnosticCenterEnterprise){
                    for (UserAccount userAccount : enterprise.getUserAccountDirectory().getUserAccountList()) {
                    
                    if(userAccount.getWorkQueue().getWorkRequestList().isEmpty())
                    {
                        Object[] row = new Object[3];
                        row[0] = enterprise.getName();
                        row[1] = userAccount.getEmployee();
                        row[2] = network.getName();
                        enterpriseModel.addRow(row);
                    }
                }
                }
            }
        }
    }
        
    private void populatePatientStatusTable(){
        DefaultTableModel model = (DefaultTableModel) tblPopulatePatientStatus.getModel();
        model.setRowCount(0);
        
        for (WorkRequest workRequest : enterprise.getWorkQueue().getWorkRequestList()) {

            if (workRequest instanceof PatientRegistrationRequest) {
                Object[] row = new Object[model.getColumnCount()];
                row[0] = ((PatientRegistrationRequest) workRequest);
                row[1] = ((PatientRegistrationRequest) workRequest).getPatientName();
                row[2] = ((PatientRegistrationRequest) workRequest).getDiagnostician();
                row[3] = ((PatientRegistrationRequest) workRequest).getStatus();
                row[4] = ((PatientRegistrationRequest) workRequest).getMessage();
                model.addRow(row);
            }
        }
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDiagnosticCenter = new javax.swing.JTable();
        btnSubmit = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblPopulatePatientStatus = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTitle.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        lblTitle.setText("Select Diagnostic Center to give Samples");
        add(lblTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 60, -1, -1));

        tblDiagnosticCenter.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tblDiagnosticCenter.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Diagnostic Center", "Diagnostician", "State"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDiagnosticCenter.setRowHeight(50);
        tblDiagnosticCenter.setRowMargin(0);
        jScrollPane1.setViewportView(tblDiagnosticCenter);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(272, 580, 940, 240));

        btnSubmit.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnSubmit.setText("Submit Samples");
        btnSubmit.setOpaque(false);
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });
        add(btnSubmit, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 870, -1, 50));

        btnBack.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnBack.setText("Back");
        btnBack.setOpaque(false);
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 10, 110, 50));

        tblPopulatePatientStatus.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tblPopulatePatientStatus.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id", "Patient Name", "Assigned Diagnostician", "Status", "Message"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblPopulatePatientStatus.setRowHeight(50);
        tblPopulatePatientStatus.setRowMargin(0);
        jScrollPane2.setViewportView(tblPopulatePatientStatus);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 240, 1150, 240));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/diagnew.jpg"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1440, 1080));
    }// </editor-fold>//GEN-END:initComponents

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblPopulatePatientStatus.getSelectedRow();
        int selectedDiagnosticRow = tblDiagnosticCenter.getSelectedRow(); 
        
        PatientRegistrationRequest patientRegistrationRequest = (PatientRegistrationRequest) tblPopulatePatientStatus.getValueAt(selectedRow, 0);

        Employee employee = (Employee)tblDiagnosticCenter.getValueAt(selectedDiagnosticRow, 1);
        
        if (selectedRow >= 0 && selectedDiagnosticRow >=0)
        {
            if(patientRegistrationRequest.getDiagnostician()==null){
                String msg = JOptionPane.showInputDialog("Additional Information");
            
                patientRegistrationRequest.setDiagnostician(employee);
                patientRegistrationRequest.setStatus("Submitted Samples for Testing");
                patientRegistrationRequest.setMessage(msg);

                for(Organization o : enterprise.getOrganizationDirectory().getOrganizationList()) {
                    for (UserAccount u : o.getUserAccountDirectory().getUserAccountList()) {
                        if (u.getEmployee().getId() == (employee.getId())) {
                            u.getWorkQueue().getWorkRequestList().add(patientRegistrationRequest);
                        }
                    }
                }

                JOptionPane.showMessageDialog(null, "Samples Submitted Successfully");
                populateEnterpriseTable();
                populatePatientStatusTable();
            }
            else{
                 JOptionPane.showMessageDialog(null,"Samples already submitted to the Diagnostic Center", "Warning", JOptionPane.WARNING_MESSAGE);
                 return;
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null,"Please select a Diadnostic Center & Samples to Submit!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
        cardLayout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblDiagnosticCenter;
    private javax.swing.JTable tblPopulatePatientStatus;
    // End of variables declaration//GEN-END:variables
}
