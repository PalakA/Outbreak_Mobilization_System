/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.PatientRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organizations.Organization;
import Business.Utils.Validator;
import Business.WorkQueue.PatientRegistrationRequest;
import Business.WorkQueue.WorkQueue;
import java.util.Date;
import java.util.Properties;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 * @author ajayp
 * @author nakul
 * @author palak
 * 
 * Revision History:
 * 
 * Date(MM/DD/YYYY)      Author              Comment
 * 04/15/2021            @author palak       Added Patient Registration Panel
 * 04/22/2021            @author palak       Updated JPanel
 */

public class PatientRegistrationJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageEnterprisesJPanel
     */
    
    private JPanel userProcessContainer;
    private EcoSystem ecosystem;
    Enterprise enterprise;
    
    public PatientRegistrationJPanel(JPanel userProcessContainer, EcoSystem ecosystem, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ecosystem = ecosystem;
        this.enterprise = enterprise;
        populateOrganizationCombo();
        populateNetworkComboBox();
        radioBtnMale.setSelected(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        lblPatientName = new javax.swing.JLabel();
        txtPatientName = new javax.swing.JTextField();
        lblPatientAge = new javax.swing.JLabel();
        txtPatientAge = new javax.swing.JTextField();
        lblPatientGender = new javax.swing.JLabel();
        radioBtnMale = new javax.swing.JRadioButton();
        radioBtnFemale = new javax.swing.JRadioButton();
        lblPatientUsername = new javax.swing.JLabel();
        txtPatientUsername = new javax.swing.JTextField();
        lblPatientPassword = new javax.swing.JLabel();
        txtPatientPassword = new javax.swing.JTextField();
        lblPatientAddress = new javax.swing.JLabel();
        txtPatientAddress = new javax.swing.JTextField();
        lblPatientNumber = new javax.swing.JLabel();
        txtPatientNumber = new javax.swing.JTextField();
        lblPatientSymptoms1 = new javax.swing.JLabel();
        txtPatientSymptoms1 = new javax.swing.JTextField();
        btnSubmit = new javax.swing.JButton();
        lblPatientEmailId = new javax.swing.JLabel();
        txtPatientEmailId = new javax.swing.JTextField();
        lblNetwork = new javax.swing.JLabel();
        comboNetwork = new javax.swing.JComboBox();
        comboOrganization = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();

        lblTitle.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Patient Registration Panel");

        lblPatientName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblPatientName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblPatientName.setText("Name:");

        lblPatientAge.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblPatientAge.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblPatientAge.setText("Age:");

        lblPatientGender.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblPatientGender.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblPatientGender.setText("Gender:");

        radioBtnMale.setText("Male");
        radioBtnMale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioBtnMaleActionPerformed(evt);
            }
        });

        radioBtnFemale.setText("Female");
        radioBtnFemale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioBtnFemaleActionPerformed(evt);
            }
        });

        lblPatientUsername.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblPatientUsername.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblPatientUsername.setText("Username:");

        lblPatientPassword.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblPatientPassword.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblPatientPassword.setText("Password:");

        lblPatientAddress.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblPatientAddress.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblPatientAddress.setText("Address:");

        lblPatientNumber.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblPatientNumber.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblPatientNumber.setText("Phone Number:");

        lblPatientSymptoms1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblPatientSymptoms1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblPatientSymptoms1.setText("Symptoms:");

        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        lblPatientEmailId.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblPatientEmailId.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblPatientEmailId.setText("Email Address:");

        lblNetwork.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblNetwork.setText("Network:");

        comboNetwork.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        comboOrganization.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel1.setText("Organization Type: ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(125, 125, 125)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPatientName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblPatientAge, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPatientGender, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 442, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(4, 4, 4)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblPatientUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblPatientPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(4, 4, 4)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(lblPatientAddress, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                                                .addComponent(lblPatientEmailId, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGap(34, 34, 34)
                                            .addComponent(txtPatientEmailId, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(lblPatientNumber)
                                                .addComponent(lblPatientSymptoms1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGap(38, 38, 38)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(txtPatientSymptoms1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txtPatientNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txtPatientAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addGap(47, 47, 47)
                                                    .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtPatientUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtPatientPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtPatientAge, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(radioBtnMale, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(radioBtnFemale, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(comboNetwork, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(comboOrganization, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(lblNetwork))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jLabel1)))
                .addContainerGap(117, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblPatientAddress, lblPatientAge, lblPatientGender, lblPatientName, lblPatientNumber, lblPatientPassword, lblPatientSymptoms1, lblPatientUsername});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {comboNetwork, comboOrganization, txtPatientAddress, txtPatientAge, txtPatientName, txtPatientNumber, txtPatientPassword, txtPatientSymptoms1, txtPatientUsername});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(lblTitle)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPatientName)
                    .addComponent(txtPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPatientAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPatientAge))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioBtnFemale)
                    .addComponent(radioBtnMale)
                    .addComponent(lblPatientGender))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNetwork)
                    .addComponent(comboNetwork, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboOrganization, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPatientUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPatientUsername))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPatientPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPatientPassword))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPatientEmailId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPatientEmailId))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPatientAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPatientAddress))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPatientNumber)
                    .addComponent(txtPatientNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPatientSymptoms1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPatientSymptoms1))
                .addGap(18, 18, 18)
                .addComponent(btnSubmit)
                .addContainerGap(46, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {lblPatientAddress, lblPatientAge, lblPatientGender, lblPatientName, lblPatientNumber, lblPatientPassword, lblPatientSymptoms1, lblPatientUsername});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtPatientAddress, txtPatientAge, txtPatientName, txtPatientNumber, txtPatientPassword, txtPatientSymptoms1, txtPatientUsername});

    }// </editor-fold>//GEN-END:initComponents

    private void populateOrganizationCombo(){
        comboOrganization.removeAllItems();
        for (Organization.Type type : Organization.Type.values()){
            if (!type.getValue().equals(Organization.Type.Admin.getValue()))
                comboOrganization.addItem(type);
        }
    }
      
    private void populateNetworkComboBox() {
        comboNetwork.removeAllItems();
        for (Network network : ecosystem.getNetworkList()) {
            comboNetwork.addItem(network);
        }
    }
        
    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        
        Network network = (Network) comboNetwork.getSelectedItem();
        Organization.Type type = (Organization.Type) comboOrganization.getSelectedItem();
        
        String patientName = txtPatientName.getText();
        String patientAddress = txtPatientAddress.getText();
        String patientNumber = txtPatientNumber.getText();
        String patientUsername = txtPatientUsername.getText();
        String patientPassword = txtPatientPassword.getText();
        String patientSymptoms = txtPatientSymptoms1.getText();
        String patientAge      = txtPatientAge.getText();
        String patientEmailId  = txtPatientEmailId.getText();
        String sPatientGender  = "";
        boolean bSuccess = false;
        
        if (!Validator.isValidUsername(patientUsername)) {
            JOptionPane.showMessageDialog(null, "Username is in incorrect \nFormat. Should be 2 to 25 characters "
                    + "and characters, numbers and the ., -, _ symbols");
            return;
        }
        
        if(!Validator.isValidEmail(patientEmailId))
        {
            JOptionPane.showMessageDialog(null, "Email should be in correct format!"
                    + "\nFormat: abc@def.com");
            return;
        }
        
        if(!Validator.isValidPhoneNumber(patientNumber))
        {
            JOptionPane.showMessageDialog(null, "Contact Number should be in correct format!"
                    + "\nFormat: 10 digit Number or (Area Code)Number or +1 (Area Code)Number");
            return;
        }
        
        if(!Validator.isValidPassword(patientPassword))
        {
            JOptionPane.showMessageDialog(null, "Password is in incorrect \nFormat. Should be minimum 8 in length "
                    + "with one upper case, one lower case, one digit and one special character");
            return;
        }
        
        if(radioBtnMale.isSelected())
        {
            sPatientGender = radioBtnMale.getText();
        }
        else
        {
            sPatientGender = radioBtnFemale.getText();
        }
        
         if(patientName.isEmpty() || patientAddress.isEmpty() || patientNumber.isEmpty() || patientUsername.isEmpty() || patientPassword.isEmpty() || patientAge.isEmpty()
                 || patientSymptoms.isEmpty() || patientEmailId.isEmpty()){
            JOptionPane.showMessageDialog(null, "Please enter all fields", "Warning", JOptionPane.WARNING_MESSAGE);
         } 
         else
         {
             String msg = JOptionPane.showInputDialog("Additional Information");
             
             
            PatientRegistrationRequest registrationRequest = new PatientRegistrationRequest();
            registrationRequest.setPatientName(patientName);
            registrationRequest.setPatientUsername(patientUsername);
            registrationRequest.setPatientPassword(patientPassword);
            registrationRequest.setPatientEmailId(patientEmailId);
            registrationRequest.setPatientAge(patientAge);
            registrationRequest.setPatientGender(sPatientGender);
            registrationRequest.setOrgType(type);
            registrationRequest.setNetwork(network);
            registrationRequest.setStatus("Requested");
            registrationRequest.setPatientNumber(patientNumber);
            registrationRequest.setPatientAddress(patientAddress);
            registrationRequest.setSymptom1(patientSymptoms);
            registrationRequest.setRequestDate(new Date());
            registrationRequest.setMessage(msg);
            sendEmailMessage(patientEmailId);

            for (Network network1 : ecosystem.getNetworkList()) {
                for (Enterprise enterprise : network1.getEnterpriseDirectory().getEnterpriseList()) {
                    if (enterprise.getEnterpriseType() == Enterprise.EnterpriseType.Hospital) {
                        if (enterprise.getWorkQueue() == null) {
                            enterprise.setWorkQueue(new WorkQueue());
                        }
                        enterprise.getWorkQueue().getWorkRequestList().add(registrationRequest);
                        bSuccess = true;
                    }
                }
            }

            if(bSuccess == true)
            {
                JOptionPane.showMessageDialog(null, "You have been registered succesfully!");
                txtPatientName.setText("");
                txtPatientUsername.setText("");
                txtPatientPassword.setText("");
                txtPatientAddress.setText("");
                txtPatientAge.setText("");
                txtPatientEmailId.setText("");
                txtPatientNumber.setText("");
                txtPatientSymptoms1.setText("");
                radioBtnFemale.setSelected(false);
                radioBtnMale.setSelected(false);
            }
            
         }
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void radioBtnFemaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioBtnFemaleActionPerformed
        // TODO add your handling code here:
        radioBtnMale.setSelected(false);
    }//GEN-LAST:event_radioBtnFemaleActionPerformed

    private void radioBtnMaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioBtnMaleActionPerformed
        // TODO add your handling code here:
        radioBtnFemale.setSelected(false);
    }//GEN-LAST:event_radioBtnMaleActionPerformed

public static void sendEmailMessage(String emailId) {
        // Recipient's email ID needs to be mentioned.
        String to = emailId;
        String from = "donotreplymobilization@gmail.com";
        String pass = "outbreakMobileSystem";
        // Assuming you are sending email from localhost
        // String host = "192.168.0.16";

        // Get system properties
        Properties properties = System.getProperties();
        String host = "smtp.gmail.com";

        properties.put("mail.smtp.starttls.enable", "true");

        properties.put("mail.smtp.ssl.trust", host);
        properties.put("mail.smtp.user", from);
        properties.put("mail.smtp.port", "587");
        properties.put("mail.smtp.auth", "true");

        Session session = Session.getDefaultInstance(properties);

        try {
            // Create a default MimeMessage object.
            MimeMessage message = new MimeMessage(session);

            // Set From: header field of the header.
            message.setFrom(new InternetAddress(from));

            // Set To: header field of the header.
            message.addRecipient(Message.RecipientType.TO, new InternetAddress(to));

            // Set Subject: header field
            message.setSubject("Patient Registration");
            message.setText("Thank you for registering with us. Your account will be activated within 24 hours.");
             message.setText("After account activation, Please submit your samples to a Diagnostic Center");
            // Send message
            Transport transport = session.getTransport("smtp");
            transport.connect(host, from, pass);
            transport.sendMessage(message, message.getAllRecipients());
            transport.close();
            System.out.println("Sent message successfully....");
        } catch (MessagingException mex) {
            mex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Invalid email id");
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSubmit;
    private javax.swing.JComboBox comboNetwork;
    private javax.swing.JComboBox comboOrganization;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblNetwork;
    private javax.swing.JLabel lblPatientAddress;
    private javax.swing.JLabel lblPatientAge;
    private javax.swing.JLabel lblPatientEmailId;
    private javax.swing.JLabel lblPatientGender;
    private javax.swing.JLabel lblPatientName;
    private javax.swing.JLabel lblPatientNumber;
    private javax.swing.JLabel lblPatientPassword;
    private javax.swing.JLabel lblPatientSymptoms1;
    private javax.swing.JLabel lblPatientUsername;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JRadioButton radioBtnFemale;
    private javax.swing.JRadioButton radioBtnMale;
    private javax.swing.JTextField txtPatientAddress;
    private javax.swing.JTextField txtPatientAge;
    private javax.swing.JTextField txtPatientEmailId;
    private javax.swing.JTextField txtPatientName;
    private javax.swing.JTextField txtPatientNumber;
    private javax.swing.JTextField txtPatientPassword;
    private javax.swing.JTextField txtPatientSymptoms1;
    private javax.swing.JTextField txtPatientUsername;
    // End of variables declaration//GEN-END:variables
}
