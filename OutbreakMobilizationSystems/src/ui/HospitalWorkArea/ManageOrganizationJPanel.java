/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.HospitalWorkArea;

import Business.Organizations.HospitalInvetoryOrganization;
import Business.Organizations.LaboratoriesOrganization;
import Business.Organizations.ManufacturerOrganization;
import Business.Organizations.Organization;
import Business.Organizations.Organization.Type;
import Business.Organizations.OrganizationDirectory;
import Business.Organizations.PharmacyCatalogOrganization;
import Business.Organizations.PharmacyDistributionOrganization;
import Business.Organizations.SampleCollectionsOrganization;
import Business.Organizations.SupplyChainOrganization;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raunak
 */
public class ManageOrganizationJPanel extends javax.swing.JPanel {

    private OrganizationDirectory directory;
    private JPanel userProcessContainer;
    
    /**
     * Creates new form ManageOrganizationJPanel
     */
    public ManageOrganizationJPanel(JPanel userProcessContainer,OrganizationDirectory directory) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.directory = directory;
        
        populateTable();
        populateCombo();
    }
    
    private void populateCombo(){
        organizationJComboBox.removeAllItems();
        for (Type type : Organization.Type.values()){
            if (!type.getValue().equals(Type.Admin.getValue()))
                organizationJComboBox.addItem(type);
        }
    }

    private void populateTable(){
        DefaultTableModel model = (DefaultTableModel) organizationJTable.getModel();
        
        model.setRowCount(0);
        
        for (Organization organization : directory.getOrganizationList()){
            Object[] row = new Object[2];
            row[0] = organization.getOrganizationID();
            row[1] = organization.getName();
            
            model.addRow(row);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        organizationJTable = new javax.swing.JTable();
        addJButton = new javax.swing.JButton();
        organizationJComboBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();

        organizationJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(organizationJTable);
        if (organizationJTable.getColumnModel().getColumnCount() > 0) {
            organizationJTable.getColumnModel().getColumn(0).setResizable(false);
            organizationJTable.getColumnModel().getColumn(1).setResizable(false);
        }

        addJButton.setText("Add Organization");
        addJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addJButtonActionPerformed(evt);
            }
        });

        organizationJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel1.setText("Organization Type ");

        btnBack.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(184, 184, 184)
                        .addComponent(jLabel1)
                        .addGap(32, 32, 32)
                        .addComponent(organizationJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(263, 263, 263)
                        .addComponent(addJButton))
                    .addComponent(btnBack))
                .addContainerGap(182, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(btnBack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(organizationJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(42, 42, 42)
                .addComponent(addJButton)
                .addGap(49, 49, 49)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(248, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addJButtonActionPerformed

        Type type = (Type) organizationJComboBox.getSelectedItem();
        int checkFlag = 1;
        
        if(type.getValue().equals(Type.Hospital.getValue())){
           for (Organization organization : directory.getOrganizationList()){
           if (organization instanceof HospitalInvetoryOrganization){
              JOptionPane.showMessageDialog(null, "Hospital Inventory Organization exists"); 
              checkFlag = 0;
               break;
           }  } 
       }
       
       if(type.getValue().equals(Type.Laboratories.getValue())){
           for (Organization organization : directory.getOrganizationList()){
           if (organization instanceof LaboratoriesOrganization){
              JOptionPane.showMessageDialog(null, "Laboratories Organization exists"); 
              checkFlag = 0;
               break;
           }  } 
       }
       
       if(type.getValue().equals(Type.Manufacturer.getValue())){
           for (Organization organization : directory.getOrganizationList()){
           if (organization instanceof ManufacturerOrganization){
              JOptionPane.showMessageDialog(null, "Manufacturer Organization exists"); 
              checkFlag = 0;
               break;
           }  } 
       }
       
       if(type.getValue().equals(Type.PharmacyCatalog.getValue())){
           for (Organization organization : directory.getOrganizationList()){
           if (organization instanceof PharmacyCatalogOrganization){
              JOptionPane.showMessageDialog(null, "PharmacyCatalog Organization exists"); 
              checkFlag = 0;
               break;
           }  } 
       }
       
       if(type.getValue().equals(Type.PharmacyDistribution.getValue())){
           for (Organization organization : directory.getOrganizationList()){
           if (organization instanceof PharmacyDistributionOrganization){
              JOptionPane.showMessageDialog(null, "PharmacyDistribution Organization exists"); 
              checkFlag = 0;
               break;
           }  } 
       }
       
       if(type.getValue().equals(Type.SampleCollections.getValue())){
           for (Organization organization : directory.getOrganizationList()){
           if (organization instanceof SampleCollectionsOrganization){
              JOptionPane.showMessageDialog(null, "SamplCollections Organization exists"); 
              checkFlag = 0;
               break;
           }  } 
       }
       
       if(type.getValue().equals(Type.SupplyChain.getValue())){
           for (Organization organization : directory.getOrganizationList()){
           if (organization instanceof SupplyChainOrganization){
              JOptionPane.showMessageDialog(null, "Supply Chain Organization exists"); 
              checkFlag = 0;
               break;
           }  } 
       }
       
        if (checkFlag==1){
                directory.createOrganization(type);
        populateTable();
           }
    }//GEN-LAST:event_addJButtonActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
        cardLayout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addJButton;
    private javax.swing.JButton btnBack;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox organizationJComboBox;
    private javax.swing.JTable organizationJTable;
    // End of variables declaration//GEN-END:variables
}
