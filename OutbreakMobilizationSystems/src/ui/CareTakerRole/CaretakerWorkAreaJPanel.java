/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.CareTakerRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.PatientRegistrationRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;

/**
 * @author ajayp
 * @author nakul
 * @author palak
 *
 * Revision History:
 *
 * Date(MM/DD/YYYY) Author Comment 04/13/2021 @author nakul Added
 * CareTakerWorkArea JPanel 04/14/2021 @author palak Added UserAccount and
 * network
 */
public class CaretakerWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CaretakerWorkAreaJPanel
     */
    JPanel userProcessContainer;
    EcoSystem ecosystem;
    UserAccount user;
    Network network;
    Enterprise enterprise;
    Timer timer;

    public CaretakerWorkAreaJPanel(JPanel userProcessContainer, UserAccount user, Network network, EcoSystem ecosystem, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.user = user;
        this.network = network;
        this.ecosystem = ecosystem;
        this.enterprise = enterprise;
        populateMedicinesTable();
        
        ActionListener actionListener = new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
                //Time in 12Hrs Format
                Date date1 = new Date();
                DateFormat timeFormat1 = new SimpleDateFormat("hh:mm:ss");
                String time1 = timeFormat1.format(date1);
                time_txt.setText(time1);
                
                //Todays Date
                Date date2 = new Date();
                DateFormat timeFormat2 = new SimpleDateFormat("MM/dd/yyyy");
                String time2 = timeFormat2.format(date2);
                date_txt.setText(time2);
            }
        };
        timer = new Timer(1000, actionListener);
        timer.setInitialDelay(0);
        timer.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void populateMedicinesTable() {
        DefaultTableModel enterpriseModel = (DefaultTableModel) tblMedicines.getModel();
        enterpriseModel.setRowCount(0);
        for (WorkRequest wr : enterprise.getWorkQueue().getWorkRequestList()) {
            if (wr instanceof PatientRegistrationRequest) {
                Object[] row = new Object[enterpriseModel.getColumnCount()];
                row[0] = ((PatientRegistrationRequest) wr);
                row[1] = ((PatientRegistrationRequest) wr).getPharmacy();
                row[2] = ((PatientRegistrationRequest) wr).getPatientName();
                row[3] = ((PatientRegistrationRequest) wr).getDoctor();
                row[4] = ((PatientRegistrationRequest) wr).getPrescription();
                row[5] = ((PatientRegistrationRequest) wr).getStatus();
                row[6] = ((PatientRegistrationRequest) wr).getMessage();
                enterpriseModel.addRow(row);
            }
        }
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblGetMedicines = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMedicines = new javax.swing.JTable();
        btnProcess = new javax.swing.JButton();
        btnDelivered = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        date_txt = new javax.swing.JLabel();
        time_txt = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblGetMedicines.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        lblGetMedicines.setText("Get Prescribed Medicines");
        add(lblGetMedicines, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 50, 620, -1));

        tblMedicines.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tblMedicines.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Pharmacy ID", "Pharmacy Name", "Patient Name", "Doctor Name", "Prescription", "Status", "Message"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblMedicines.setRowHeight(50);
        tblMedicines.setRowMargin(0);
        jScrollPane1.setViewportView(tblMedicines);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(128, 250, 1210, 240));

        btnProcess.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnProcess.setText("Process");
        btnProcess.setOpaque(false);
        btnProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcessActionPerformed(evt);
            }
        });
        add(btnProcess, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 650, -1, -1));

        btnDelivered.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnDelivered.setText("Delivered");
        btnDelivered.setOpaque(false);
        btnDelivered.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeliveredActionPerformed(evt);
            }
        });
        add(btnDelivered, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 650, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/caretakerNew.jpg"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, -4, 1440, 1080));

        date_txt.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        add(date_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(1090, 30, 180, 28));

        time_txt.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        add(time_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(1256, 30, 160, 28));
    }// </editor-fold>//GEN-END:initComponents

    private void btnProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcessActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblMedicines.getSelectedRow();
        
        if (selectedRow >= 0) {
            PatientRegistrationRequest patientRegistrationRequest = (PatientRegistrationRequest) tblMedicines.getValueAt(selectedRow, 0);
                String msg = JOptionPane.showInputDialog("Additional Information");
                patientRegistrationRequest.setStatus("Pick up the prescribed medicines");
                patientRegistrationRequest.setMessage(msg);
                populateMedicinesTable();
        } else {
            JOptionPane.showMessageDialog(null, "Please select the pharmacy to pickup the medicines.");
        }
    }//GEN-LAST:event_btnProcessActionPerformed

    private void btnDeliveredActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeliveredActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblMedicines.getSelectedRow();
        
        if (selectedRow >= 0) {
            PatientRegistrationRequest patientRegistrationRequest = (PatientRegistrationRequest) tblMedicines.getValueAt(selectedRow, 0);
            if (patientRegistrationRequest.getStatus().equalsIgnoreCase("Pick up the prescribed medicines")) {
                String msg = JOptionPane.showInputDialog("Additional Information");
                patientRegistrationRequest.setStatus("Medicines delivered");
                patientRegistrationRequest.setMessage(msg);
                populateMedicinesTable();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select the pharmacy to deliever the medicines.");
        }
    }//GEN-LAST:event_btnDeliveredActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelivered;
    private javax.swing.JButton btnProcess;
    private javax.swing.JLabel date_txt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblGetMedicines;
    private javax.swing.JTable tblMedicines;
    private javax.swing.JLabel time_txt;
    // End of variables declaration//GEN-END:variables
}
